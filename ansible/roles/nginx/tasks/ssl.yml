---

- name: Ensure SSL certificate directory
  file: path="{{ ssl_certificate_path }}" state=directory mode="0750" owner=root group="{{ www_username }}"

# Insecure key should only be used with Vagrant
- name: Copy certificate and key on Vagrant
  copy: src={{ item.src }} dest={{ ssl_certificate_path }}/{{ item.dest }} mode="0640" owner=root group=root
  with_items:
    - { "src": "local_vagrant_ssl.cert", "dest": "{{ ssl_cert_filename }}" }
    - { "src": "local_vagrant_ssl.key", "dest": "{{ ssl_key_filename }}" }
  when: deployment_environment_id == "vagrant"

- name: Ensure certificate file permissions
  file: path="{{ ssl_certificate_path }}" state=directory mode="0640" recurse=yes owner=root group="{{ www_username }}"

- name: Get certificate file information
  stat: path="{{ ssl_certificate_path }}/{{ ssl_cert_filename }}"
  register: cert_file_stat

- name: Get certificate file information
  stat: path="{{ ssl_certificate_path }}/{{ ssl_key_filename }}"
  register: key_file_stat

# Certificates should always be present. On Vagrant, insecure certificate is
# copied from public repository. On servers, certificates have been installed
# manually. For now, Ansible does not handle production certificates.
- name: Assert that certificate and key exist
  assert:
    that:
      - "cert_file_stat.stat.exists == True"
      - "key_file_stat.stat.exists == True"

- name: Assert that vagrant certificate is not used on public servers
  assert:
    that:
      - "cert_file_stat.stat.checksum != 'bbde09620527350eee80c9e1b9f8050c690a60a9'"
      - "key_file_stat.stat.checksum != '60f2d0976a639ba4f3ed9397592dc37a67dfa8b0'"
  when: deployment_environment_id != "vagrant"
