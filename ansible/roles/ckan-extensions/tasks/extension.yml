---

# On servers, create an archive of the current sources, upload and unarchive
- block:
  - name: "Archive extension {{ item }}"
    local_action: command zip -FSr /tmp/{{ item }}.zip {{ item }} chdir="../ckanext"
    become: false

  - name: "Remove possible existing extension {{ item }}"
    file: path="{{ ckanext_sync_path }}/{{ item }}" state=absent

  - name: "Copy and unarchive extension {{ item }}"
    unarchive: src=/tmp/{{ item }}.zip dest="{{ ckanext_sync_path }}/" owner=root group=root
  
  when: deployment_environment_id != "vagrant"

# On Vagrant, symlink sources from host so that they can be edited live
- block:
  - name: "Remove existing extension {{ item }} (Vagrant)"
    file: path="{{ ckanext_sync_path }}/{{ item }}" state=absent

  - name: "Symlink extension {{ item }} sources from host machine (Vagrant)"
    file: src="/vagrant/ckanext/{{ item }}" path="{{ ckanext_sync_path }}/{{ item }}" state=link

  when: deployment_environment_id == "vagrant"

# Install dependencies for the extension. Depending on the extension, deps
# are listed either in requirements.txt or pip-requirements.txt. Both are covered here.

- name: Register extension requirements.txt
  stat: path="{{ ckanext_sync_path }}/{{ item }}/requirements.txt"
  register: requirements

- name: Register extension pip-requirements.txt
  stat: path="{{ ckanext_sync_path }}/{{ item }}/pip-requirements.txt"
  register: piprequirements

- name: Install extension requirements
  pip: requirements="{{ ckanext_sync_path }}/{{ item }}/requirements.txt" virtualenv={{ virtualenv }}
  when: requirements.stat.exists

- name: Install extension piprequirements
  pip: requirements="{{ ckanext_sync_path }}/{{ item }}/pip-requirements.txt" virtualenv={{ virtualenv }}
  when: piprequirements.stat.exists

- name: "Link extension sources {{ item }}"
  command: "{{ virtualenv }}/bin/python setup.py develop chdir={{ ckanext_sync_path }}/{{ item }}"
