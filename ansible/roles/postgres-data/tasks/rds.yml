---

- name: Setup postgres users
  become_user: postgres
  postgresql_user:
    db: postgres
    user: "{{ item.value.username }}"
    password: "{{ item.value.password }}"
    no_password_changes: true
    login_host: "{{ postgres.server.host }}"
    login_user: "{{ postgres.server.admin_user }}"
    login_password: "{{ postgres.server.admin_password }}"
  with_dict: "{{ postgres.users }}"

- name: Grant role to master user
  postgresql_privs:
    db: postgres
    roles: ckan_admin
    type: group
    objs: "{{ item.value.username }}"
    login_host: "{{ postgres.server.host }}"
    login_user: "{{ postgres.server.admin_user }}"
    login_password: "{{ postgres.server.admin_password }}"
  with_dict: "{{ postgres.users }}"

- name: Setup postgres databases
  become_user: postgres
  postgresql_db:
    name: "{{ item.value.name }}"
    owner: "{{ item.value.owner }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    login_host: "{{ postgres.server.host }}"
    login_user: "{{ postgres.server.admin_user }}"
    login_password: "{{ postgres.server.admin_password }}"
  with_dict: "{{ postgres.databases }}"
  ignore_errors: True

- name: Copy SQL files
  template: src={{ item }} dest=/tmp/{{ item }} owner=postgres group=postgres mode="0640"
  with_items: "{{ sql_files_to_execute }}"

- name: Execute SQL files
  become_user: postgres
  shell: cat /tmp/{{ item }} | psql -d datastore_default -h "{{ postgres.server.host }}" -U "{{ postgres.server.admin_user }}" --set ON_ERROR_STOP=1
  with_items: "{{ sql_files_to_execute }}"
  environment:
    PGPASSWORD: "{{ postgres.server.admin_password }}"

- name: Initialize Spatial database
  command: psql -f {{ role_path }}/files/enable-rds-postgis.sql --set ON_ERROR_STOP=1
  ignore_errors: True
  environment:
    PGHOST: "{{ postgres.server.host }}"
    PGDATABASE: ckan_default
    PGUSER: "{{ postgres.server.admin_user }}"
    PGPASSWORD: "{{ postgres.server.admin_password }}"
