diff --git a/ckan/controllers/user.py b/ckan/controllers/user.py
index bea4ad7..1603b96 100644
--- a/ckan/controllers/user.py
+++ b/ckan/controllers/user.py
@@ -13,8 +13,8 @@ import ckan.lib.captcha as captcha
 import ckan.lib.mailer as mailer
 import ckan.lib.navl.dictization_functions as dictization_functions
 import ckan.lib.authenticator as authenticator
+import ckan.lib.csrf_token as csrf_token
 import ckan.plugins as p
-
 from ckan.common import _, c, g, request, response
 
 log = logging.getLogger(__name__)
@@ -325,6 +325,8 @@ class UserController(base.BaseController):
             context['message'] = data_dict.get('log_message', '')
             data_dict['id'] = id
 
+            csrf_token.validate(data_dict.get('csrf-token', ''))
+
             if data_dict['password1'] and data_dict['password2']:
                 identity = {'login': c.user,
                             'password': data_dict['old_password']}
@@ -354,6 +356,10 @@ class UserController(base.BaseController):
             errors = {'oldpassword': [_('Password entered was incorrect')]}
             error_summary = {_('Old Password'): _('incorrect password')}
             return self.edit(id, data_dict, errors, error_summary)
+        except csrf_token.CsrfTokenValidationError:
+            h.flash_error(_('Security token error, please try again'))
+            return self.edit(id, data_dict, {}, {})
+
 
     def login(self, error=None):
         # Do any plugin login stuff
diff --git a/ckan/lib/csrf_token.py b/ckan/lib/csrf_token.py
new file mode 100644
index 0000000..b93d1fa
--- /dev/null
+++ b/ckan/lib/csrf_token.py
@@ -0,0 +1,67 @@
+# -*- coding: utf-8 -*-
+
+import os
+import base64
+import struct
+import random
+from pylons import session
+from ckan.common import c
+
+import logging
+log = logging.getLogger(__name__)
+
+class CsrfTokenValidationError(Exception):
+    pass
+
+def _get_current_token(user):
+    tokens = session.get('csrf_tokens', {})
+    return tokens.get(user, None)
+
+def _set_current_token(user, token):
+    tokens = session.get('csrf_tokens', {})
+    tokens[user] = token
+    session['csrf_tokens'] = tokens
+    session.save()
+
+def _generate_new_token():
+    token_bytes = os.urandom(64)
+    token = base64.urlsafe_b64encode(token_bytes)
+    return token
+
+def _get_user():
+    return c.user
+
+# Compare tokens in random order to avoid timing attacks
+def _compare_tokens(a, b):
+    if not a or not b or len(a) != len(b):
+        return False
+
+    indices = range(len(a))
+    random.shuffle(indices)
+
+    for i in indices:
+        if a[i] != b[i]:
+            return False
+
+    return True
+
+def generate():
+    user = _get_user()
+    if not user: return ''
+
+    existing_token = _get_current_token(user)
+    if existing_token:
+        return existing_token
+
+    token = _generate_new_token()
+    _set_current_token(user, token)
+    return token
+
+def validate(token):
+    user = _get_user()
+    if not user:
+        raise CsrfTokenValidationError()
+
+    existing_token = _get_current_token(user)
+    if not _compare_tokens(token, existing_token):
+        raise CsrfTokenValidationError()
diff --git a/ckan/lib/helpers.py b/ckan/lib/helpers.py
index 67bdf99..f5d267d 100644
--- a/ckan/lib/helpers.py
+++ b/ckan/lib/helpers.py
@@ -45,6 +45,7 @@ import ckan.lib.datapreview as datapreview
 import ckan.logic as logic
 import ckan.lib.uploader as uploader
 import ckan.authz as authz
+import ckan.lib.csrf_token as csrf_token
 
 from ckan.common import (
     _, ungettext, g, c, request, session, json, OrderedDict
@@ -2123,6 +2124,9 @@ def license_options(existing_license_id=None):
         for license_id in license_ids]
 
 
+def generate_csrf_token():
+    return csrf_token.generate()
+
 # these are the functions that will end up in `h` template helpers
 __allowed_functions__ = [
     # functions defined in ckan.lib.helpers
@@ -2242,4 +2246,5 @@ __allowed_functions__ = [
     'check_config_permission',
     'view_resource_url',
     'license_options',
+    'generate_csrf_token'
 ]
diff --git a/ckan/templates/user/edit_user_form.html b/ckan/templates/user/edit_user_form.html
index 9643b35..36bcbbb 100644
--- a/ckan/templates/user/edit_user_form.html
+++ b/ckan/templates/user/edit_user_form.html
@@ -3,6 +3,8 @@
 <form id="user-edit-form" class="dataset-form form-horizontal" method="post" action="{{ action }}">
   {{ form.errors(error_summary) }}
 
+  {{ form.hidden('csrf-token', h.generate_csrf_token()) }}
+
   <fieldset>
     <legend>{{ _('Change details') }}</legend>
     {{ form.input('name', label=_('Username'), id='field-username', value=data.name, error=errors.name, classes=['control-medium'], is_required=true) }}
