---

- name: Install CKAN
  pip: name="git+https://github.com/ckan/ckan.git@ckan-{{ ckan_version }}#egg=ckan" virtualenv={{ virtualenv }} state=latest

- name: Install CKAN requirements
  pip: requirements={{ virtualenv }}/src/ckan/requirements.txt virtualenv={{ virtualenv }} state=latest

- name: Install CKAN launch script
  template: src=ckan.j2 dest=/usr/bin/ckan mode=0755 owner=root group=root

- name: Create CKAN files path
  file: path="{{ ckan_files_path }}" state=directory mode=0770 owner="{{ www_user }}" group="{{ www_group }}"

- name: Create CKAN settings path
  file: path="/etc/ckan/default" state=directory mode=0770 owner="{{ www_user }}" group="{{ www_group }}"

- name: Ensure path ownerships
  command: chown -R "{{ www_user }}:{{ www_group }}" "{{ ckan_files_path }}" /etc/ckan/default
- name: Ensure upload path mode
  command: chmod -R "0770" "{{ ckan_files_path }}" 
- name: Ensure filestore path ownership
  command: chown -R "{{ www_user }}:{{ www_group }}" "{{ ckan_files_path }}"

- name: Copy CKAN configuration
  template: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }} owner={{ item.owner }} group={{ item.owner }}
  with_items:
    - { src: ckan.ini.j2, dest: "{{ ckan_ini }}", mode: 0640, owner: root, group: "{{ www_group }}" }
    - { src: apache.wsgi.j2, dest: /etc/ckan/default/apache.wsgi, mode: 0640, owner: root, group: "{{ www_group }}" }
    - { src: who.ini.j2, dest: /etc/ckan/default/who.ini, mode: 0640, owner: root, group: "{{ www_group }}" }

- include: custom_requirements.yml

- name: Stop supervisor services (as it may block database update)
  command: supervisorctl stop all

- include: database.yml

#- name: re-minify CKAN javascript files
#  shell: ./bin/paster --plugin=ckan minify {{ ckan_source_path }}/ckan/public/base/javascript/modules "--config={{ ckan_ini }}" chdir="{{ virtualenv }}"
#  tags:
#  - ckan
#  - translations

- name: Ensure Apache restart
  service: name=apache2 state=restarted

# - include: cron.yml
