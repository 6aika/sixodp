[program:ckan_gather_consumer]

command=nice -n 20 {{ virtualenv }}/bin/paster --plugin=ckanext-harvest harvester gather_consumer --config={{ ckan_ini }}
user={{ harvester_user }}
numprocs=1
stdout_logfile={{ log_path }}/gather_consumer.log
stderr_logfile={{ log_path }}/gather_consumer.log
autostart=true
autorestart=true
startsecs=10


[program:ckan_fetch_consumer]

command=nice -n 20 {{ virtualenv }}/bin/paster --plugin=ckanext-harvest harvester fetch_consumer --config={{ ckan_ini }}
user={{ harvester_user }}
numprocs=1
stdout_logfile={{ log_path }}/fetch_consumer.log
stderr_logfile={{ log_path }}/fetch_consumer.log
autostart=true
autorestart=true
startsecs=10


[program:celery_celery]

command={{ virtualenv }}/bin/paster --plugin=ckan celeryd run -q celery --config={{ ckan_ini }}
user={{ celery_user }}

numprocs=1
stdout_logfile={{ log_path }}/celeryd.log
stderr_logfile={{ log_path }}/celeryd.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998

[program:celery_bulk]

command={{ virtualenv }}/bin/paster --plugin=ckan celeryd run -q bulk --config={{ ckan_ini }}
user={{ celery_user }}

numprocs=1
stdout_logfile={{ log_path }}/celeryd_bulk.log
stderr_logfile={{ log_path }}/celeryd_bulk.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998


[program:celery_priority]

command={{ virtualenv }}/bin/paster --plugin=ckan celeryd run -q priority --config={{ ckan_ini }}
user={{ celery_user }}

numprocs=1
stdout_logfile={{ log_path }}/celeryd_priority.log
stderr_logfile={{ log_path }}/celeryd_priority.log
autostart=true
autorestart=true
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998

[program:celerybeat]

command={{ virtualenv }}/bin/celery beat --config=ytp_celery --workdir=/etc/ckan/default/ --pidfile=/tmp/celerybeat_pid --schedule=/tmp/celerybeat_schedule
user={{ celery_user }}

numprocs=1
stdout_logfile={{ log_path }}/celerybeat.log
stderr_logfile={{ log_path }}/celerybeat.log
autostart=true
autorestart=true
startsecs=10

priority=999
